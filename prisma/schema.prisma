// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email String @unique // 이메일, max: 255

  username String // 유저명, max: 255

  passwordHash String // 비밀번호

  profileUrl String? // 유저 프로필 url, max: 1000

  lastActiveAt DateTime? // 마지막 접속 시간

  lastActiveIp String? // 마지막 접속 아이피

  createdAt DateTime @default(now()) // 생성일

  updatedAt DateTime @updatedAt // 업데이트일

  deletedAt DateTime? // 삭제일 

  walletId Int

  authentications UserAuthentication[]

  wallet UserWallet @relation(fields: [walletId], references: [id])
}

model UserAuthentication {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now()) // 생성일

  updatedAt DateTime @updatedAt // 업데이트일

  deletedAt DateTime? // 삭제일 

  user   User? @relation(fields: [userId], references: [id]) // 로그인 유저 정보
  userId Int? // 로그인 유저 아이디
}

model UserWallet {
  id Int @id @default(autoincrement())

  address String @unique // 지갑주소

  createdAt DateTime @default(now()) // 생성일

  updatedAt DateTime @updatedAt // 업데이트일

  deletedAt DateTime? // 삭제일 

  user User[]
}

model File {
  id Int @id @default(autoincrement())

  publicId String @unique // cloudinary 업로드 아이디

  version Int // 버전 정보

  signature String // 서명정보

  foramt String // 파일 형식

  resourceType String // 리소스에 대한 타입

  url String // http 주소

  secureUrl String // https 주소

  uploadType String // PROFILE | NFT

  mediaType String // VIDEO | IMAGE

  createdAt DateTime @default(now()) // 생성일

  updatedAt DateTime @updatedAt // 업데이트일

  deletedAt DateTime? // 삭제일 
}
